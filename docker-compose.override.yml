version: '3.4'

services:
  #api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=https://+:443;http://+:80
  #  ports:
  #    - "8888:80"
  #    - "44380:443"
  #  volumes:
  #    - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  postgres:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: Bookstore
    restart: always
    ports:
      - 15435:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  redis:
    restart: always
    command: redis-server --requirepass docker
    ports:
      - "6379:6379"
      
  mongodb:
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=docker
      - MONGO_INITDB_DATABASE=Bookstore
      - MONGO_INITDB_AUTHENTICATION_DATABASE=Bookstore
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./mongodb-entrypoint.sh:/docker-entrypoint-initdb.d/mongodb-entrypoint.sh

  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_USER: "guest"      
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres-data:
  mongodb-data: